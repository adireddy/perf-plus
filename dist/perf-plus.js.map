{
"version":3,
"file":"perf-plus.js",
"sourceRoot":"file:///",
"sources":["/usr/local/lib/haxe/std/js/_std/HxOverrides.hx","/projects/perf-plus/src/PerfPlus.hx","/projects/perf-plus/src/PlusUI.hx","/usr/local/lib/haxe/std/js/_std/Reflect.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","import js.html.XMLHttpRequest;\nimport PlusUI.FileData;\nimport js.html.Window;\nimport web.Performance;\nimport js.Browser;\n\n@:expose class PerfPlus {\n\n\tpublic static var MEASUREMENT_INTERVAL:Int = 1000;\n\tpublic var averageFps:Float;\n\tpublic var currentFps:Float;\n\tpublic var minFps:Float;\n\tpublic var maxFps:Float;\n\tpublic var currentMs:Float;\n\tpublic var currentMem:String;\n\tpublic var resourceCount:Int;\n\tpublic var resourceLoadDuration:Float;\n\tpublic var pageLoadTime:Float;\n\tpublic var pageRenderTime:Float;\n\tpublic var types:Array<FileData>;\n\tpublic var files:Array<FileData>;\n\n\tpublic var heapSizeLimit:String;\n\tpublic var totalHeapSize:String;\n\tpublic var usedHeapSize:String;\n\n\tpublic var navigationType:String;\n\tpublic var redirectCount:Float;\n\n\tvar _time:Float;\n\tvar _startTime:Float;\n\tvar _prevTime:Float;\n\tvar _ticks:Int;\n\tvar _memCheck:Bool;\n\n\tvar _perfObj:Performance;\n\tvar _memoryObj:MemoryInfo;\n\n\tvar _ui:PlusUI;\n\tvar _win:Window;\n\tvar _showUI:Bool;\n\n\tvar _totalFps:Float;\n\tvar _updateIntervalCount:Float;\n\n\tvar _bytesPerMs:Float;\n\n\tpublic function new(?win:Window, ?showUI:Bool = true) {\n\t\t_init();\n\t\tif (win == null) win = Browser.window;\n\t\t_win = win;\n\t\t_showUI = showUI;\n\t\t_perfObj = cast _win.performance;\n\t}\n\n\tinline function _addResources() {\n\t\tif (untyped __js__(\"window.performance\").getEntriesByType != null) {\n\t\t\tvar data = _perfObj.getEntriesByType(\"resource\");\n\t\t\t_ui.addResources(data, _bytesPerMs);\n\t\t\tresourceCount = data.length;\n\t\t\tresourceLoadDuration = _ui.resourceLoadDuration;\n\t\t\ttypes = _ui.fileTypes;\n\t\t\tfiles = _ui.files;\n\n\t\t\ttypes.sort(function(comp1:FileData, comp2:FileData):Int {\n\t\t\t\treturn Reflect.compare(comp1.duration, comp2.duration);\n\t\t\t});\n\t\t\ttypes.reverse();\n\n\t\t\tfiles.sort(function(comp1:FileData, comp2:FileData):Int {\n\t\t\t\treturn Reflect.compare(comp1.duration, comp2.duration);\n\t\t\t});\n\t\t\tfiles.reverse();\n\t\t}\n\t}\n\n\tpublic function start() {\n\t\t_ui = new PlusUI(_showUI);\n\t\t_memoryObj = _perfObj.memory;\n\t\t_memCheck = (_perfObj != null && _memoryObj != null && _memoryObj.totalJSHeapSize > 0);\n\n\t\t_addResources();\n\n\t\t_win.requestAnimationFrame(cast _tick);\n\n\t\tif (untyped __js__(\"window.performance\").timing != null) {\n\t\t\tpageLoadTime = _perfObj.timing.responseEnd - _perfObj.timing.navigationStart;\n\t\t\tpageRenderTime = _perfObj.timing.loadEventStart - _perfObj.timing.domLoading;\n\t\t\tif (_showUI) _ui.setTiming(pageLoadTime);\n\t\t}\n\n\t\tif (untyped __js__(\"window.performance\").memory != null) {\n\t\t\theapSizeLimit = _ui.getFormattedSize(_perfObj.memory.jsHeapSizeLimit, 2);\n\t\t\ttotalHeapSize = _ui.getFormattedSize(_perfObj.memory.totalJSHeapSize, 2);\n\t\t\tusedHeapSize = _ui.getFormattedSize(_perfObj.memory.usedJSHeapSize, 2);\n\t\t}\n\n\t\tif (untyped __js__(\"window.performance\").navigation != null) {\n\t\t\tswitch (_perfObj.navigation.type) {\n\t\t\t\tcase 0: navigationType = \"url, link, form or script redirect\";\n\t\t\t\tcase 1: navigationType = \"page refresh\";\n\t\t\t\tcase 2: navigationType = \"back or forward button\";\n\t\t\t\tcase 255: navigationType = \"unknown\";\n\t\t\t}\n\t\t\tredirectCount = _perfObj.navigation.redirectCount;\n\t\t}\n\t}\n\n\tinline function _init() {\n\t\t_bytesPerMs = 0;\n\t\tcurrentFps = 0;\n\t\taverageFps = 0;\n\t\tcurrentMs = 0;\n\t\tcurrentMem = \"0\";\n\t\tresourceCount = 0;\n\t\tresourceLoadDuration = 0;\n\t\tpageLoadTime = 0;\n\n\t\t_totalFps = 0;\n\t\t_updateIntervalCount = 0;\n\n\t\t_time = 0;\n\t\t_ticks = 0;\n\t\tminFps = Math.POSITIVE_INFINITY;\n\t\tmaxFps = 0;\n\t\t_startTime = _now();\n\t\t_prevTime = -MEASUREMENT_INTERVAL;\n\t}\n\n\tinline function _now():Float {\n\t\treturn (_perfObj != null && _perfObj.now != null) ? _perfObj.now() : Date.now().getTime();\n\t}\n\n\tfunction _tick() {\n\t\tvar time = _now();\n\t\t_ticks++;\n\n\t\tif (time > _prevTime + MEASUREMENT_INTERVAL) {\n\t\t\t_updateIntervalCount++;\n\t\t\tcurrentMs = Math.round(time - _startTime);\n\n\t\t\tif (_showUI) _ui.setMs(currentMs);\n\n\t\t\tcurrentFps = Math.round((_ticks * 1000) / (time - _prevTime));\n\t\t\tminFps = Math.min(minFps, currentFps);\n\t\t\tmaxFps = Math.max(maxFps, currentFps);\n\t\t\t_totalFps += currentFps;\n\t\t\taverageFps = _totalFps / _updateIntervalCount;\n\t\t\tif (_showUI) _ui.setFps(currentFps);\n\n\t\t\t_prevTime = time;\n\t\t\t_ticks = 0;\n\n\t\t\tif (_memCheck) {\n\t\t\t\tcurrentMem = _getFormattedSize(_memoryObj.usedJSHeapSize, 2);\n\t\t\t\tif (_showUI) _ui.setMem(currentMem);\n\t\t\t}\n\t\t}\n\t\t_startTime = time;\n\n\t\t_win.requestAnimationFrame(cast _tick);\n\t}\n\n\tfunction _getFormattedSize(bytes:Float, ?frac:Int = 0):String {\n\t\tvar sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\t\tif (bytes == 0) return \"0\";\n\t\tvar precision = Math.pow(10, frac);\n\t\tvar i = Math.floor(Math.log(bytes) / Math.log(1024));\n\t\treturn Math.round(bytes * precision / Math.pow(1024, i)) / precision + \" \" + sizes[i];\n\t}\n\n\tpublic function destroy() {\n\t\tif (_showUI) _ui.destroy();\n\t\t_init();\n\t}\n}","import js.html.PerformanceResourceTiming;\nimport dat.controllers.Controller;\nimport dat.gui.GUI;\n\nclass PlusUI {\n\n\tvar _menu:GUI;\n\tvar _data:Dynamic;\n\tvar _types:Dynamic;\n\tvar _fileData:Dynamic;\n\tvar _resourcesData:Array<PerformanceResourceTiming>;\n\tvar _showUI:Bool;\n\n\tpublic var resourceCount(default, null):Int;\n\tpublic var resourceLoadDuration(default, null):Float;\n\n\tpublic var fileTypes(default, null):Array<FileData>;\n\tpublic var files(default, null):Array<FileData>;\n\n\tvar _fileTypes:Array<String>;\n\tvar _files:Array<String>;\n\n\tpublic function new(?showUI:Bool = true) {\n\t\t_showUI = showUI;\n\t\t_init();\n\t\tif (_showUI) {\n\t\t\t_menu = new GUI();\n\t\t\t_menu.add(_data, \"FPS\", 0, 60).listen();\n\t\t\t_menu.add(_data, \"MS\").listen();\n\t\t\t_menu.add(_data, \"TIMING\").listen();\n\t\t\t_menu.add(_data, \"MEMORY\").listen();\n\t\t}\n\t}\n\n\tinline function _init() {\n\t\tresourceCount = 0;\n\t\tresourceLoadDuration = 0;\n\t\t_data = { FPS: 0, MS: 0, TIMING: 0, MEMORY: \"0\" };\n\t}\n\n\tpublic function setFps(val:Float) {\n\t\tif (val >= 0) _data.FPS = val;\n\t}\n\n\tpublic function setMs(val:Float) {\n\t\tif (val >= 0) _data.MS = val;\n\t}\n\n\tpublic function setTiming(val:Float) {\n\t\t_data.TIMING = val;\n\t}\n\n\tpublic function setMem(val:String) {\n\t\t_data.MEMORY = val;\n\t}\n\n\tpublic function addResources(data:Array<PerformanceResourceTiming>, ?bytesPerMs:Float = 0) {\n\t\tvar folder = null;\n\t\tif (_showUI) folder = _menu.addFolder(\"RESOURCES DATA\");\n\t\t_resourcesData = data;\n\t\tresourceCount = data.length;\n\t\tvar resources = { TOTAL: data.length, DURATION: 0, types: [], files: [] };\n\t\t_types = { count: 0, duration: 0 };\n\n\t\tif (_showUI) folder.add(resources, \"TOTAL\");\n\n\t\t_fileTypes = [];\n\t\tfileTypes = [];\n\t\tfor (res in data) {\n\t\t\tresourceLoadDuration += res.duration;\n\t\t\tvar ext = _stripQueryString(res.name);\n\t\t\tif (_fileTypes.indexOf(ext) == -1) {\n\t\t\t\t_fileTypes.push(ext);\n\t\t\t\t_typeStats(ext);\n\t\t\t\tfileTypes.push({name: ext, count: _types.count, duration: _types.duration });\n\t\t\t}\n\t\t}\n\t\tresources.DURATION = Std.int(resourceLoadDuration);\n\t\tif (_showUI) folder.add(resources, \"DURATION\");\n\n\t\tif (_showUI) {\n\t\t\tvar fileTypes = folder.add(resources, \"types\", _fileTypes);\n\t\t\tfolder.add(_types, \"count\").listen();\n\t\t\tfolder.add(_types, \"duration\").listen();\n\t\t\tfileTypes.onChange(_typeStats);\n\t\t}\n\t\t_typeStats(_fileTypes[0]);\n\n\t\t_fileData = { duration: 0 };\n\t\t_files = [];\n\t\tfiles = [];\n\t\tfor (res in data) {\n\t\t\t_files.push(res.name);\n\t\t\t_fileStats(res.name);\n\t\t\tfiles.push({name: _stripUrlAndQueryString(res.name), count: 1, duration: _fileData.duration, url: res.name, size: getFormattedSize(_fileData.duration * bytesPerMs, 2) });\n\t\t}\n\n\t\tif (_showUI) {\n\t\t\tvar filesFolder = _menu.addFolder(\"ALL RESOURCES\");\n\t\t\tvar allFiles = filesFolder.add(resources, \"files\", files);\n\t\t\tfilesFolder.add(_fileData, \"duration\").listen();\n\t\t\tallFiles.onChange(_fileStats);\n\t\t}\n\t\t_fileStats(_files[0]);\n\t}\n\n\tfunction _typeStats(val) {\n\t\tvar count:Int = 0;\n\t\tvar duration:Float = 0;\n\t\tfor (res in _resourcesData) {\n\t\t\tvar ext = _stripQueryString(res.name);\n\t\t\tif (ext == val) {\n\t\t\t\tcount++;\n\t\t\t\tduration += res.duration;\n\t\t\t}\n\t\t}\n\t\t_types.count = count;\n\t\t_types.duration = duration;\n\t}\n\n\tfunction _fileStats(val) {\n\t\tfor (res in _resourcesData) {\n\t\t\tif (res.name == val) {\n\t\t\t\t_fileData.duration = res.duration;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic function getFormattedSize(bytes:Float, ?frac:Int = 0):String {\n\t\tvar sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n\t\tif (bytes == 0) return \"0\";\n\t\tvar precision = Math.pow(10, frac);\n\t\tvar i = Math.floor(Math.log(bytes) / Math.log(1024));\n\t\treturn Math.round(bytes * precision / Math.pow(1024, i)) / precision + \" \" + sizes[i];\n\t}\n\n\tinline function _stripQueryString(val:String):String {\n\t\tval = val.indexOf(\"?\") > -1 ? val.substring(0, val.indexOf(\"?\")) : val;\n\t\tval = val.substring(val.lastIndexOf(\".\") + 1, val.length);\n\t\tif (val.length > 20) return \"unknown\";\n\t\treturn val;\n\t}\n\n\tinline function _stripUrlAndQueryString(val:String):String {\n\t\tval = val.indexOf(\"?\") > -1 ? val.substring(0, val.indexOf(\"?\")) : val;\n\t\treturn val.substring(val.lastIndexOf(\"/\") + 1, val.length);\n\t}\n\n\tpublic function destroy() {\n\t\tif (_showUI) _menu.destroy();\n\t\t_init();\n\t}\n}\n\ntypedef FileData = {\n\tvar name:String;\n\tvar duration:Float;\n\t@:optional var count:Int;\n\t@:optional var url:String;\n\t@:optional var size:String;\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n"],
"names":[],
"mappings":"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"
}